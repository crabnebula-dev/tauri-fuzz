name: Build and test

on: [pull_request,workflow_dispatch]
#on:
  #push:
  #  branches: [ main, 'pr/**' ]
  #pull_request:
  #  branches: [ main ]
  #workflow_dispatch:
env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Install native dependecies
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.1
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --workspace -- -Dclippy::all -Dclippy::pedantic

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Install rustfmt with nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
      
  Build-and-test-Fuzzer:
    strategy:
      matrix:
          os: [ubuntu-latest] #[ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Packages
        run: sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev libc++-15-dev libc++abi-15-dev clang-15 ## libgtk-3-dev

      - uses: actions/checkout@v4
        name: Checkout repository
        #    ${{ secrets.REPO_READ_KEY }}
        #    ${{ secrets.LIBAFL_SUBMODULE_KEY }}

      - name: Add SSH private key for submodule repositorie
        uses: webfactory/ssh-agent@v0.9.0
        with:
           ssh-private-key: ${{ secrets.LIBAFL_SUBMODULE_KEY }}

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-on-failure: true # only enabled for faster debugging
      
        ## Maybe use this instead https://github.com/actions/checkout/issues/287#issuecomment-1830291196
      - name: Checkout Submodule
        run: git submodule update --init --recursive

      - name: Build debug
        run: cargo build

      - name: Run tests
        run: cargo test --no-fail-fast flag

#      - name: tmate session if tests fail
#        if: failure()
#        uses: mxschmitt/action-tmate@v3
#        with:
#          limit-access-to-actor: false
  
