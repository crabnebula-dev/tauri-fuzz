[package]
name = "mini-app-fridafuzz"
version = "0.0.0"
publish = false
edition = "2021"

[dependencies]
log = "0.4"
env_logger = "*"
# Fuzz dependencies

# libafl = { git = "https://github.com/AFLplusplus/LibAFL.git", features = [ "std", "llmp_compression", "llmp_bind_public", "frida_cli" ] } #,  "llmp_small_maps", "llmp_debug"]}
# libafl_bolts = { git = "https://github.com/AFLplusplus/LibAFL.git" }
# libafl_frida = { git = "https://github.com/AFLplusplus/LibAFL.git", features = ["cmplog"] }
# libafl_targets = { git = "https://github.com/AFLplusplus/LibAFL.git", features = ["sancov_cmplog"] }

libafl = { path = "../../../../LibAFL/libafl", features = [ "std", "llmp_compression", "llmp_bind_public", "frida_cli" ] } #,  "llmp_small_maps", "llmp_debug"]}
libafl_bolts = { path = "../../../../LibAFL/libafl_bolts"}
libafl_frida = { path = "../../../../LibAFL/libafl_frida", features = ["cmplog"] }
libafl_targets = { path = "../../../../LibAFL/libafl_targets", features = ["sancov_cmplog"] }

frida-gum = { version = "0.13.2", features = [ "auto-download", "event-sink", "invocation-listener"] }
libloading = "0.7"
mimalloc = { version = "*", default-features = false }
color-backtrace = "0.5"
clap = { version = "4.0" }

[dependencies.tauri]
# path = "../../../../cn-tauri/core/tauri"
git = "ssh://git@github.com/crabnebula-dev/tauri.git"
branch = "feat/fuzz"
default-features = false
features = ["test"]

[dependencies.tauri-runtime]
# path = "../../../../cn-tauri/core/tauri-runtime"
git = "ssh://git@github.com/crabnebula-dev/tauri.git"
branch = "feat/fuzz"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]

[profile.release]
lto = true
codegen-units = 1
opt-level = 3
debug = true

[dependencies.mini-app]
path = ".."

# Prevent this from interfering with workspaces
[workspace]
members = ["."]

[[bin]]
name = "tauri_cmd_1"
path = "tauri_cmd_1.rs"
test = false
doc = false

[[bin]]
name = "tauri_cmd_2"
path = "tauri_cmd_2.rs"
test = false
doc = false
